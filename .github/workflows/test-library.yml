name: script-test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-format:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies from dev_env.yml
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: '3.12' #monitor
          environment-file: dev_env.yml
          activate-environment: dev-env
          use-mamba: true

      # --- Code Quality Checks (Enforcement Mode) ---
      # The following steps will fail the workflow if the code is not
      # correctly formatted or linted. Developers should be expected to run
      # pre-commit hooks before PR
      - name: Check Formatting with Ruff
        run: ruff format --check .

      - name: Lint with Ruff
        run: ruff check .

      - name: Find, Install, and Test All Packages
        run: |
          find packages -type f -name "pyproject.toml" | while read -r config_file; do
            project_dir=$(dirname "$config_file")
            echo "=================================================="
            echo "Testing project in: ${project_dir}"
            echo "=================================================="
            (
              cd "${project_dir}" && \
              echo "--- Installing dependencies ---" && \
              pip install -e . && \
              echo "--- Running tests with coverage ---" && \
              package_name=$(grep -E '^name\s*=\s*"' pyproject.toml | cut -d '"' -f 2) && \
              pytest --cov="$package_name" --cov-report="xml:coverage-${package_name}.xml"
            )
            if [ $? -ne 0 ]; then
              echo "Tests failed in ${project_dir}"
              exit 1
            fi
          done
