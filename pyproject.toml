# pyproject.toml



### this file is for tool configs, find dependency declarations in @3rdparty/


#[download-terraform] # monitor
#version = "1.13.0"

[tool.ruff]
# Same as Black.
line-length = 88
indent-width = 4
target-version = "py311"

# Exclude a variety of commonly ignored directories and the temporary
# file created by a setup-miniconda action.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "setup-miniconda-patched-*.yml", # Ignore conda temp files
    ".mypy_cache",
    ".pytest_cache",
    "docs",
    "notebooks",
    "sdist",
    "wheel",
    "*.egg-info",
    "project_template",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # Pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov",
    "--cov-report=term-missing",
]

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/.venv/*",
    "*/venv/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
